# ⚠️ Warning: this file is auto-generated. To modify, edit .projenrc.py and run `uv run .projenrc.py`.

[project]
name = "helpers"
version = "0.0.0"
description = "A metaflow flow. For questions, reach out to Eric Riddoch."
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
  "httpx>=0.28.1",
  "numpy==1.26.3",
  "outerbounds>=0.3.149",
  "pandas>=2.2.3",
  "requests>=2.32.3",
  "scikit-learn>=1.6.1",
  "snowflake-connector-python>=3.13.1"
]

[dependency-groups]
dev = [
  "jupyter",
  "mypy",
  "poethepoet",
  "poethepoet>=0.33.1",
  "pre-commit",
  "pytest",
  "pytest-cov",
  "ruff"
]
eda = [
  "duckdb-engine>=0.17.0",
  "duckdb>=1.2.2",
  "jupysql>=0.11.1",
  "jupyterlab>=4.4.0",
  "matplotlib",
  "pandas>=2.2.3"
]

[build-system]
build-backend = "hatchling.build"
requires = [ "hatchling" ]

[tool.pytest.ini_options]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')"
]
pythonpath = [ "." ]
addopts = [
  "--junitxml=test-reports/report.xml",
  "--cov=src",
  "--cov-fail-under=40",
  "--cov-report=xml",
  "--cov-report=html",
  "--cov-report=term"
]

[tool.coverage.paths]
source = [ "src/" ]

[tool.coverage.report]
exclude_also = [
  "pragma: no cover",
  "if False",
  "def __repr__",
  "if self.debug",
  "raise AssertionError",
  "raise NotImplementedError",
  "raise MemoryError",
  "except DistributionNotFound",
  "except ImportError",
  "@abc.abstractmethod",
  "if 0:",
  "if __name__ == .__main__.:",
  "if typing.TYPE_CHECKING:",
  "if TYPE_CHECKING:"
]
omit = [ "tests/artifacts/*", "src/*_flow.py" ]
show_missing = true

[tool.coverage.run]
branch = true
parallel = true
data_file = "test-reports/.coverage"

[tool.coverage.xml]
output = "test-reports/coverage.xml"

[tool.coverage.html]
directory = "test-reports/htmlcov"

[tool.coverage.json]
output = "test-reports/coverage.json"

[tool.poe.tasks.lint]
cmd = "pre-commit run --all-files"
help = "Run linting, formatting, projen synth, and other static code quality tools"

[tool.poe.tasks.test]
cmd = "pytest tests"
help = "Run all tests"

[tool.poe.tasks.serve-coverage-report]
help = "Serve the coverage report on http://localhost:3333"
shell = """
echo "Serving coverage report on http://localhost:3333"
echo "Press Ctrl+C to stop the server"

python -m http.server 3333 --directory ./test-reports/htmlcov
"""

[tool.poe.tasks.clean]
help = "Remove all files generated by tests, builds, or operating this codebase"
shell = """
rm -rf dist build coverage.xml test-reports sample/

find . \\
    -type d \\
    \\( \\
    -name "*cache*" \\
    -o -name "*.dist-info" \\
    -o -name "*.egg-info" \\
    -o -name "*htmlcov" \\
    -o -name "*.metaflow" \\
    -o -name "*metaflow.s3*" \\
    -o -name "*.mypy_cache" \\
    -o -name "*.pytest_cache" \\
    -o -name "*.ruff_cache" \\
    -o -name "*__pycache__" \\
    \\) \\
    -not -path "*env/*" \\
    -exec rm -r {} + || true

find . \\
    -type f \\
    -name "*.pyc" \\
    -o -name "*.DS_Store" \\
    -o -name "*.coverage" \\
    -not -path "*env/*" \\
    -exec rm {} +
"""

[tool.poe.tasks.synth]
cmd = "bash ../../../run synth"
help = "Run .projenrc.py with latest version of ds-projen"

[tool.poe.tasks."flows:extract_load_data_flow"]
cmd = "uv run src/extract_load_data_flow.py --environment=fast-bakery --package-suffixes='.csv,.sql,.json,.toml,.yaml,.yml' --with card"
help = "Usage: poe flows:extract_load_data_flow [args...] {run | resume | show} [args...]"
